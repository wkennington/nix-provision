#!/bin/sh
set -e
SCRIPTDIR="$(readlink -f "$(dirname "$0")")"

ISSUE="$(cat /etc/issue 2>/dev/null)" || true
LSB_RELEASE="$(cat /etc/lsb-release 2>/dev/null)" || true
VCORES="$(cat /proc/cpuinfo  | grep 'core id' | wc -l)"

# Check that we are using a verified working OS
if echo "$ISSUE" | grep -q 'Ubuntu'; then
  echo "Provisioning Nix for Ubuntu" >&2
elif echo "$ISSUE" | grep -q 'NixOS'; then
  echo "NixOS already has nix provisioned" >&2
  exit 0
else
  echo "Unsupported OS" >&2
  exit 1
fi

# Only allow running as root
if [ "$(id -u)" -ne "0" ]; then
  echo "You must run provision as root" >&2
  exit 1
fi

# Include libraries
LIBS=$(ls "$SCRIPTDIR/libs" | sort)
for LIB in $LIBS; do
  . "$SCRIPTDIR/libs/$LIB"
done

# Make temporary working space which will be cleaned
TMP="$(mktemp -d)"
cd "$TMP"
cleanup_final () {
  for LIB in $LIBS; do
    "${LIB}_cleanup_final"
  done
  cd /tmp
  rm -rf "$TMP"
}
trap cleanup_final 0

# Cleanup old state
cleanup_old () {
  for LIB in $LIBS; do
    "${LIB}_cleanup_old"
  done
}
trap cleanup_old SIGINT SIGTERM

error () {
  LINE="$1"
  MESSAGE="$2"
  CODE="${3:-1}"
  echo "Error on line $1: $MESSAGE" >&2
  cleanup_old
  exit "$CODE" >&2
}
trap 'error ${LINENO}' ERR

# Cleanup old nix before the fresh install
cleanup_old
[ "$1" = "clean" ] && { echo "Cleaned up"; exit 0; }

# Run the install section for libraries
echo "Installing libraries" >&2
for LIB in $LIBS; do
  "${LIB}_install"
done

# Update everything to latest versions
echo "Updating nix" >&2
$SCRIPTDIR/update

echo "Please restart your shell in order to take advantage of nix" >&2
